{"version":3,"sources":["images/panorama.JPG","images/panorama-5stawow.JPG","images/piecstawow.jpg","images/wejscie5stawow.jpg","components/Header.js","components/Navigation.js","components/Article.js","pages/HomePage.js","components/Trail.js","pages/Trails.js","pages/TrailsList.js","pages/Equipment.js","pages/Contact.js","pages/ErrorPage.js","components/Main.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","path","exact","render","src","img2","alt","img1","img4","img3","list","name","Navigation","menu","map","item","key","to","toLocaleUpperCase","className","Article","props","title","author","content","articles","id","HomePage","text","article","Trail","Trials","match","history","useHistory","params","onClick","goBack","trails","TrailsList","trail","Equipment","Contact","useState","firstName","email","state","setState","isEmpty","setIsEmpty","handleChange","e","target","value","onSubmit","preventDefault","alert","type","onChange","rows","when","message","ErrorPage","Main","component","Trails","Footer","App","basename","process","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.b3c06ee7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/panorama.4f14b7d0.JPG\";","module.exports = __webpack_public_path__ + \"static/media/panorama-5stawow.3732bb28.JPG\";","module.exports = __webpack_public_path__ + \"static/media/piecstawow.9d07720d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/wejscie5stawow.357b39d4.jpg\";","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport '../style/Header.css';\r\nimport img1 from '../images/panorama-5stawow.JPG';\r\nimport img2 from '../images/panorama.JPG';\r\nimport img3 from '../images/piecstawow.jpg';\r\nimport img4 from '../images/wejscie5stawow.jpg';\r\nconst Header = () => {\r\n\r\n    return (\r\n        <>\r\n        <Switch>\r\n        <Route path=\"/\" exact render={() => (\r\n            <img src={img2} alt=\"tatra-mountains\"/>\r\n        )}/>\r\n        <Route path=\"/trails\" render={() => (\r\n            <img src={img1} alt=\"tatra-mountains\"/>\r\n        )}/>\r\n        <Route path=\"/equipment\" render={() => (\r\n            <img src={img4} alt=\"tatra-mountains\"/>\r\n        )}/>\r\n        <Route path=\"/contact\" render={() => (\r\n            <img src={img3} alt=\"tatra-mountains\"/>\r\n        )}/>\r\n        <Route render={() => (\r\n            <img src={img2} alt=\"tatra-mountains\"/>\r\n        )}/>\r\n        </Switch>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport '../style/Navigation.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst list = [\r\n    {name:'start', path: '/', exact:true},\r\n    {name:'szlaki', path: 'trails'},\r\n    {name:'sprzęt', path: 'equipment'},\r\n    {name:'kontakt', path: 'contact'}\r\n\r\n]\r\nconst Navigation = () => {\r\n\r\n    const menu = list.map(item => (\r\n        <li key={item.name}>\r\n            <NavLink to={item.path} exact={item.exact? item.exact : false}>{item.name.toLocaleUpperCase()}</NavLink>\r\n        </li>\r\n    ) )\r\n    return (\r\n     <nav className='nav'>\r\n        <ul>\r\n        {menu}\r\n        </ul>\r\n     </nav>\r\n    )\r\n    \r\n}\r\nexport default Navigation;","import React from 'react'\r\n\r\nconst Article = (props) => {\r\n    return ( \r\n        <article>\r\n        <h2>{props.title}</h2>\r\n        <h3>{props.author}</h3>\r\n        <p>{props.content}</p>\r\n        </article>\r\n     );\r\n}\r\n \r\nexport default Article;","import React from 'react';\r\nimport Article from '../components/Article'\r\n\r\nconst articles = [\r\n    {\r\n        id:0,\r\n        author: \"Anna Kowalska\",\r\n        title: \"Pierwsze co musisz wiedzieć!\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio quisquam deleniti, recusandae velit, error officia soluta reiciendis doloribus sapiente blanditiis, assumenda eum dolores excepturi. Itaque blanditiis corporis atque at illo!\"\r\n    },\r\n    {\r\n        id:1,\r\n        author: \"Przemysław Kolano\",\r\n        title: \"Dlaczego zakochałem się w górach?\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio quisquam deleniti, recusandae velit, error officia soluta reiciendis doloribus sapiente blanditiis, assumenda eum dolores excepturi. Itaque blanditiis corporis atque at illo!\"\r\n    },\r\n    {\r\n        id:2,\r\n        author: \"Olga Figa\",\r\n        title: \"Czego nauczyły mnie góry?\",\r\n        content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Odio quisquam deleniti, recusandae velit, error officia soluta reiciendis doloribus sapiente blanditiis, assumenda eum dolores excepturi. Itaque blanditiis corporis atque at illo!\"\r\n    }\r\n]\r\n\r\nconst HomePage = () => {\r\n\r\n    const text = articles.map(article => (\r\n        <Article \r\n         key={article.id}\r\n         author={article.author}\r\n         title={article.title}\r\n         content={article.content}\r\n         />\r\n    ))\r\n    \r\n    return ( \r\n        <>\r\n        <h1>Dzień dobry!</h1>\r\n        <p className=\"intro\">Tutaj znajdziesz wszystkie potrzebne informacje przed pierwszym wyjściem w góry</p>\r\n        {text}\r\n        </>\r\n     );\r\n}\r\n \r\nexport default HomePage;","import React from 'react'\r\n\r\nconst Trail = (props) => {\r\n    return ( \r\n        <>\r\n        <h2>{props.id}</h2>\r\n        <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Sed, similique enim. Pariatur, quos accusamus quaerat delectus temporibus ut praesentium sunt culpa rem, exercitationem officia soluta, cum sequi? Nihil, dolores amet.</p>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Trail;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Trail from '../components/Trail';\r\nconst Trials = ({match}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const handleOnClick = () => history.goBack(); \r\n\r\n    return ( \r\n        \r\n        <>\r\n        <Trail id={match.params.id}/>\r\n        <button className=\"btn-trail\" onClick={handleOnClick}>Powrót do listy szlaków</button>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Trials;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst trails = [\"Szlak na Rysy\", \"Szlak do Doliny Pięciu Stawów\", \"Szlak na Czerwone Wierchy\"]\r\n\r\nconst TrailsList = () => {\r\n\r\n    const list = trails.map(trail => (\r\n        <li key={trail}>\r\n            <Link to={`/trail/${trail}`}>{trail}</Link>\r\n        </li>\r\n        \r\n    ))\r\n    return ( \r\n        <>\r\n        <h2>Lista szlaków</h2>\r\n        <p className=\"trialTxt\">Jest to lista popularnych szlaków często wybieranych przez turystów wyruszających w góry po raz pierwszy lub dla tych już bardziej zaawansowanych.</p>\r\n        <ul className=\"trails\">\r\n            {list}\r\n        </ul>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TrailsList;","import React from 'react';\r\nconst Equipment = () => {\r\n    return ( \r\n        <>\r\n        <h2>Co warto mieć ze sobą idąc w góry?</h2>\r\n        <p>W zależności od pory roku w której chcesz się wybrać na wędrówkę będziesz potrzebował innego sprzętu/wyposażenia.</p>\r\n        <p>Oczywiście przed każdym wyjściem w góry należy sprawdzić aktualną pogodę!!</p>\r\n        <h4>Sprzęt potrzebny w słoneczną, ciepłą pogodę:</h4>\r\n        <ul className=\"equipment\">\r\n            <li>Dobre buty trekkingowe</li>\r\n            <li>Nakrycie głowy</li>\r\n            <li>Filtr przeciwsłoneczny</li>\r\n            <li>Woda</li>\r\n            <li>Pożywne przekąski</li>\r\n            <li>Kijki</li>\r\n        </ul>\r\n        <h4>Sprzęt potrzebny w chłodną, zimową pogodę:</h4>\r\n        <ul className=\"equipment\">\r\n            <li>Dobre buty trekkingowe</li>\r\n            <li>Raki</li>\r\n            <li>Filtr przeciwsłoneczny</li>\r\n            <li>Woda</li>\r\n            <li>Pożywne przekąski</li>\r\n            <li>Kijki/Czekany</li>\r\n            <li>Ciepła, nieprzemakalna odzież</li>\r\n        </ul>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default Equipment;","import React, {useState} from 'react';\r\nimport {Prompt} from 'react-router-dom';\r\n\r\nconst Contact = () => {\r\n\r\n    const [state, setState] = useState({\r\n        firstName: \"\",\r\n        title: \"\",\r\n        email: \"\",\r\n        text: \"\"\r\n    });\r\n    const [isEmpty,setIsEmpty] = useState(false);\r\n\r\n    \r\n    const handleChange = e => {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value,\r\n        })\r\n        setIsEmpty(true);\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const {firstName, title, email, text} = state;\r\n        if(firstName && title && email && text){\r\n            alert(\"Wiadomość została poprawnie wysłana\")\r\n            setState({\r\n                ...state,\r\n                firstName: \"\",\r\n                title: \"\",\r\n                email: \"\",\r\n                text: \"\",\r\n            })\r\n        }\r\n        else {\r\n            alert(\"Uzupełnij wszystkie pola\")\r\n        }\r\n    }\r\n\r\n        const {firstName, title, email, text} = state;\r\n\r\n        return (  \r\n            <>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Imię</label>\r\n                <input name=\"firstName\" type=\"text\" value={firstName} onChange={handleChange}/>\r\n                <label>Email</label>\r\n                <input name=\"email\" type=\"email\" value={email} onChange={handleChange}/>\r\n                <label>Tytuł</label>\r\n                <input name=\"title\" type=\"text\" value={title} onChange={handleChange}/>\r\n                <label>Wiadomość</label>\r\n                <textarea name=\"text\" rows=\"10\" value={text} onChange={handleChange}></textarea>\r\n                <button>Wyślij</button>\r\n            </form>\r\n            <Prompt\r\n            when={isEmpty}\r\n            message=\"Nie dokończyłeś wysyłania formularza. Czy na pewno chcesz opuścić stronę?\"\r\n            />\r\n            </>\r\n        );\r\n\r\n}\r\n \r\nexport default Contact;","import React from 'react';\r\nconst ErrorPage = () => {\r\n    return ( \r\n        <div>Nie ma takiej strony</div>\r\n     );\r\n}\r\n \r\nexport default ErrorPage;","import React from 'react';\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport HomePage from '../pages/HomePage';\r\nimport Trails from '../pages/Trails';\r\nimport TrailsList from '../pages/TrailsList';\r\nimport Equipment from '../pages/Equipment';\r\nimport Contact from '../pages/Contact';\r\nimport ErrorPage from '../pages/ErrorPage';\r\nimport \"../style/Main.css\";\r\n\r\nconst Main = () => {\r\n    \r\n    return (\r\n        <>\r\n        <Switch>\r\n        <Route path=\"/\" exact component={HomePage}/>\r\n        <Route path=\"/trails\" exact component={TrailsList}/>\r\n        <Route path=\"/trail/:id\" component={Trails}/>\r\n        <Route path=\"/equipment\" exact component={Equipment}/>\r\n        <Route path=\"/contact\" exact component={Contact}/>\r\n        <Route component={ErrorPage}/>\r\n        </Switch>\r\n        </>\r\n        )\r\n}\r\nexport default Main;","import React from 'react';\r\nconst Footer = () => (\r\n    <div>Zakochaj się w górach!</div>\r\n)\r\nexport default Footer;","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport Header from './Header';\nimport Navigation from './Navigation';\nimport Main from './Main';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <header>\n        <Header/>\n      </header>\n      <main>\n        <aside>\n          <Navigation/>\n        </aside>\n        <section>\n          <Main/>\n        </section>\n      </main>\n      <footer>\n        <Footer/>\n      </footer>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}